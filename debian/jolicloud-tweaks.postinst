#!/bin/bash
# This script can be called in the following ways:
#
# After the package was installed:
#       <postinst> configure <old-version>
#
# If prerm fails during upgrade or fails on failed upgrade:
#       <old-postinst> abort-upgrade <new-version>
#
# If prerm fails during deconfiguration of a package:
#       <postinst> abort-deconfigure in-favour <new-package> <version>
#                  removing <old-package> <version>
#
# If prerm fails during replacement due to conflict:
#       <postinst> abort-remove in-favour <new-package> <version>

set -e

# Application directories
app_dir="/usr/share/jolicloud-tweaks"
save_dir="$app_dir/save"

case "$1" in
    configure)
        # Fix the problem with evolution (uninstalled) when the computer is
        # put on AC
        if [ -a /etc/acpi/mailbtn.sh ]; then
            chmod -x /etc/acpi/mailbtn.sh
        fi

        # Remove jolicloud-tweaks earlier (redundant) fix for the shutdown
        # problem.  The previous fix was not implemented correctly,
        # resulting in an overly verbose shutdown which sometimes left the
        # system hanging.
        if [ -a /etc/default/halt ]; then
            if [ `cat /etc/default/halt | grep -c "#Automatic fix by jolicloud-tweaks"` -ne 0 ]; then
                sed -i 's/^.*#Automatic fix by jolicloud-tweaks$//' \
                    /etc/default/halt
            fi
        fi

        # Force update of top panel setting by backing out any user
        # customization
        old_ifs=$IFS
        IFS='
        '
        hdirs=$(awk -F: '{if ( $3 >= 1000 && $1 != "nobody" ) print $6}' < /etc/passwd)
        for d in $hdirs; do
            if [ -d "$d/.gconf/apps/panel" ] ; then
                backuproot="$d/.gconf-backups"
                if [ ! -d $backuproot ] ; then
                    mkdir $backuproot
                fi
                backupdir=$(mktemp -d "$backuproot/apps.XXXXXXXXXX")
                mv "$d/.gconf/apps/panel" "$backupdir"
            fi
        done

        # Gconf settings
        update-gconf-defaults

        # Change the gdm theme
        if [ -d /etc/gdm/ ]; then
            if [ ! -a /etc/gdm/gdm.conf-custom ]; then
                touch /etc/gdm/gdm.conf-custom
            fi
            $app_dir/edit-conf /etc/gdm/gdm.conf-custom greeter \
                BackgroundColor "#000000"
            $app_dir/edit-conf /etc/gdm/gdm.conf-custom greeter \
                GraphicalThemedColor "#000000"
            $app_dir/edit-conf /etc/gdm/gdm.conf-custom greeter \
                GraphicalTheme Jolicloud
        fi

        # Remove earlier maximus autostart which is not useful anymore
        maximus_autostart="/etc/xdg/autostart/maximus.desktop"
        if [ -e "$maximus_autostart".dpkg-obsolete ]; then
            echo "Removing obsolete conffile $maximus_autostart"
            rm -f "$maximus_autostart".dpkg-obsolete
        fi

        # Fix for the wrong repositories in a distributed IMG
        sed -i 's/robby/lucid/g' /etc/apt/sources.list

        # When installing jolicloud-tweaks (1.1.3), apply a dpkg-diversion
        # rule to prevent indicator-messages from starting. This is
        # required because we cannot cleanly remove the indicator-message
        # package to otherwise inhibit it.
        dpkg-divert --package jolicloud-tweaks \
            --divert /usr/share/jolicloud-tweaks/libmessaging.so.divert \
            --rename /usr/lib/indicators/3/libmessaging.so

        # When upgrading jolicloud-tweaks (1.0.1), remove legacy
        # configuration files
        if dpkg --compare-versions "$2" le "1.0.1"; then
            rm -rf /etc/firefox-3.0/pref/jolicloud-firefox-3.0.js
            rm -rf /etc/firefox-3.5/pref/jolicloud-firefox-3.5.js
            rm -rf /etc/prism/pref/jolicloud-prism.js
            rm -rf /etc/skel/.local/share/applications/jolicloud-favorite-firefox.desktop
            rm -rf /etc/skel/.local/share/applications/jolicloud-favorite-my-jolicloud.desktop
        fi

        # When upgrading jolicloud-tweaks (1.0.0), re-apply the (new) default
        # keybinding rules for all users.
        if dpkg --compare-versions "$2" le "1.0.0"; then
            for gconfdir in /home/*/.gconf; do
                if [ -d $gconfdir ]; then
                    gconftool --direct --config-source xml::$gconfdir --load \
                        /usr/share/gconf/defaults/99_jolicloud-metacity-keybindings.entries
                fi
            done
        fi

        # Make sure all users have a valid browser set in gconf
        for gconfdir in /home/*/.gconf; do
            if [ -d $gconfdir ]; then
                current_browser=`gconftool --direct --config-source xml::$gconfdir \
                                     --get /desktop/gnome/url-handlers/http/command | sed 's/ %.//g'`
		if [ ! -e "$current_browser" -a -e /usr/bin/nickel-browser ]; then
                    gconftool --direct --config-source xml::$gconfdir --load \
                        /usr/share/gconf/defaults/99_jolicloud-default-browser.entries
                fi
            fi
        done

        # When upgrading jolicloud-tweaks (1.1.7), re-apply the (new) default
        # logout policy for all users.
        if dpkg --compare-versions "$2" lt "1.1.7"; then
            # Apply this gconf entries file to the all gconf-enabled users on the system.
            for gconfdir in /home/*/.gconf; do
                if [ -d $gconfdir ]; then
                    gconftool --direct --config-source xml::$gconfdir --load \
                        /usr/share/gconf/defaults/99_jolicloud-gnome-session.entries
                fi
            done
        fi

        if ! `dpkg-divert --list /usr/lib/pm-utils/sleep.d/55NetworkManager | grep -q jolicloud-tweaks`; then
            dpkg-divert --package jolicloud-tweaks --divert /usr/lib/pm-utils/55NetworkManager.jolicloud-tweaks.diverted --rename /usr/lib/pm-utils/sleep.d/55NetworkManager
        fi
        
        # Delete the useless firefox profile symlink that prevent firefox to start after upgrading from 1.0 to 1.1
        for moz_dir in /home/*/.mozilla; do
            if [ -L "$moz_dir/firefox" -a "`readlink $moz_dir/firefox`" == "$moz_dir/firefox-3.6" ]; then
                rm $moz_dir/firefox
                if [ -d "$moz_dir/firefox-3.6.abandoned" ]; then
                    mv $moz_dir/firefox-3.6.abandoned $moz_dir/firefox-3.6
                fi
            fi
        done
        
        # Migrate NetworkManager current user connections to system connections
        if dpkg --compare-versions "$2" eq "1.2"; then
            python << EOF || true
import dbus
from twisted.internet import glib2reactor
glib2reactor.install()
from dbus.mainloop.glib import DBusGMainLoop
DBusGMainLoop(set_as_default=True)
from twisted.internet import reactor

def migrate_user_to_system_connections():
	try:
		bus = dbus.SystemBus()
		user_settings = bus.get_object('org.freedesktop.NetworkManagerUserSettings', '/org/freedesktop/NetworkManagerSettings')
		system_settings = bus.get_object('org.freedesktop.NetworkManagerSystemSettings', '/org/freedesktop/NetworkManagerSettings')
		for user_connection in user_settings.ListConnections(dbus_interface='org.freedesktop.NetworkManagerSettings'):
			connection = bus.get_object('org.freedesktop.NetworkManagerUserSettings', user_connection)
			settings = connection.GetSettings(dbus_interface='org.freedesktop.NetworkManagerSettings.Connection')
			if settings.has_key('802-11-wireless') and settings['802-11-wireless'].has_key('security'):
				secrets = connection.GetSecrets(
					settings['802-11-wireless']['security'],
					[],
					False,
					dbus_interface='org.freedesktop.NetworkManagerSettings.Connection.Secrets'
				)
				for key in secrets['802-11-wireless-security']:
					settings['802-11-wireless-security'][key] = secrets['802-11-wireless-security'][key]
			system_settings.AddConnection(settings, dbus_interface='org.freedesktop.NetworkManagerSettings')
			connection.Delete(dbus_interface='org.freedesktop.NetworkManagerSettings.Connection')
		reactor.stop()
	except Exception:
		reactor.stop()

reactor.callLater(0, migrate_user_to_system_connections)
reactor.run()
EOF
        fi
    ;;

    abort-upgrade|abort-deconfigure|abort-remove)
        ;;

    *)
        echo "$0 called with unknown argument \`$1\'" 1>&2
        exit 1
        ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
